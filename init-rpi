#!/bin/bash

# this script is run by init-rpi.service and
# only changes user pi to robert after a reboot
# it also changes ownership of directories from pi to robert
# if the initial user is robert it is not run at all.
#
###############################################################
# function to log output
# first parameter is string to log
# second parameter is used to start
# a new log file
###############################################################
log() {
	test "$2" = "new"  && rm -f ${LOGFILE}
	echo "$1" | tee -a ${LOGFILE}
}

###############################################################
# this function prints an error mesage and exists.
# parameters passed , error message
###############################################################
exitonerror() {
	echo "$1" | tee -a ${LOGFILE}
	exit 1
}

# change user pi to robert with correct groups and permissions
# check if user robert exists
# parameters: changeuser OLDUSER NEWUSER
# ie changeuser pi robert
changeuser() {
	# check if any process of pi is still running
	ps -U "$1" > /dev/null 2>&1
	test $? -eq 0 && exitonerror "a process from user $1 is still running"

	getent passwd $2 > /dev/null 2>&1
	if test $? -ne 0; then
		# user robert does not exist, create it
		# since svn might be copied to newuser home
		# the olduser dir must be copied to the newuser directory
		# usermod refuses to move if newuser home exists
		usermod -l $2 -m -d /home/$2 $1

		# if group pi exists, change it to group robert
		getent group $1
		if test $? -eq 0; then
			# change the group pi to robert
			groupmod -n $2 $1
		fi
		# set permissions of new user home
		chown $2.$2 -R /home/$2

		log "$1 user changed to user $2"
	else
		log "user $2 already exists"
	fi
}
###########################################
# set ownership of /mnt/ dirs to robert.robert
# after pi changed to robert
# parameter passed is user robert
###########################################
setowner() {
	chown -R --no-dereference $1.$1 /mnt
	# change ownership of directories

	log "set ownership of directories"
}


# only for raspberry pi
LOGFILE="/tmp/init-rpi.log"
OLDUSER="pi"
NEWUSER="robert"

################################
# main entry
################################
log "init-rpi is running" "new"

# if user is robert, exit nothing to be done
getent passwd robert > /dev/null 2>&1
test $? -eq 0 && exitonerror "nothing to be done"

# if user not pi exit
getent passwd pi > /dev/null 2>&1
test $? -eq 0 || exitonerror "old user is not pi"

# change user from pi to robert
changeuser "${OLDUSER}" "${NEWUSER}"

# set ownership of /mnt directories
setowner "${NEWUSER}"

# disable the init-rpi.service if it is enabled
if test -f /etc/systemd/system/init-rpi.service; then
	systemctl is-enabled init-rpi.service
	if test $? -eq 0; then
		# disable the init-rpi.service
		systemctl disable init-rpi.service
		log "disabled init-rpi.service"
	fi
fi
