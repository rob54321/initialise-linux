#!/bin/bash

# the repositories must be mounted where the link points to.
# the subversion repository must exist.
# this script initialises the repositories for apt-get, makes all the devices, sets links for myenvironment, myrc.local and
# and installs subversion
usage() {
	echo "-D linux dist [debian|ubuntu]		default: ${LINUXDISTRO}";
	echo "-d debian path [file:///mnt/hdd/debian|http://debian.mirror.ac.za/debian]	default: ${DEBIANURL}";
	echo "-u ubuntu path [file:///mnt/hdd/ubuntu-archive|http://ubuntu.mirror.ac.za] default: ${UBUNTUURL}";
	echo "-m debhome path			default: ${MYDEBIANPATH}";
	echo "-r release name [stable|wily]		default: ${RELEASE}";
	echo "-s svn path				default: ${SVNPATH}";
	echo "-l linklabel for hdd				default: ${LINKLABEL}";
	echo "-h help"
	exit
}

# defaults
# must be debian or ubuntu
LINUXDISTRO="none"
UBUNTUURL="http://archive.ubuntu.com/ubuntu"
DEBIANURL="/mnt/hdd/debian"
SVNPATH="/mnt/hdint/svn"
MYDEBIANPATH="/mnt/hdd/debhome"
LINKLABEL="ad64"
LINK="/mnt/${LINKLABEL}"
RELEASE="none"

while getopts D:d:u:m:s:l:r:h opt
do
	case ${opt} in
		D) LINUXDISTRO="${OPTARG}";;
		u) UBUNTUURL="${OPTARG}";;
		d) DEBIANURL="${OPTARG}";;
		m) MYDEBIANPATH="${OPTARG}";;
		s) SVNPATH="${OPTARG}";;
		l) LINKLABEL="${OPTARG}";;
		r) RELEASE="${OPTARG}";;
		h) usage;;
		\?) usage;;
	esac
done

# set up the urls and path for debian or ubuntu
if [ "${LINUXDISTRO}" == "debian" ]
then
	DISTROURL="${DEBIANURL}"
elif [ "${LINUXDISTRO}" == "ubuntu" ]
then
	DISTROURL="${UBUNTUURL}"
else
	echo "no such ${LINUXDISTRO} distribution"
	exit 1
fi

if [ "${RELEASE}" == "none" ]
then
	echo "Choose a release: bionic utopic, saucy, trusty etc"
	exit 1
fi

MYDEBIANURL="file://${MYDEBIANPATH}"

# make all the mount directories
chown robert.robert /mnt
cd /mnt
dirlist="hd2 hd3 sd64 ssd ele tos trans16 whdd wd myp sea x1 x2 can win axiz axiz2 king sah trans ver ver8 chaos ad scd1 scd2"
for dir in $dirlist
do
	if [ ! -d /mnt/${dir} ]
	then
		mkdir /mnt/${dir}
	fi
done
# set permisions of /mnt dirs
chown robert.robert /mnt/*

# make the link for subversion
# so it can be accessed as file:///mnt/svn no matter where it is located
cd /mnt

if [ -L svn ]
then
	rm -f svn
fi
sudo -u robert ln -s ${SVNPATH} svn
SVNURL="file://${SVNPATH}"


# check the svn repository
if [ ! -e ${SVNPATH} ]
then
	echo "No subversion repository found at ${SVNPATH}"
	exit 1
fi

# make the hdd link
if [ -L hdd ]
then
	rm -f hdd
fi
sudo -u robert ln -s ${LINK} hdd

# mount the  flash drive for debhome
findmnt ${LINK}
if [ $? -ne 0 ]
then
	mount -L ${LINKLABEL} ${LINK}
fi

#check for debhome
if [ ! -e ${MYDEBIANPATH} ]
then
	echo "No debhome repository found at ${MYDEBIANPATH}"
	exit 1
fi

# script to initialise sources.list, apt conf and
# setup everything to be able to mount the repository

# make sources.list for amd64
cp -a /etc/apt/sources.list /etc/apt/sources.list.bak

# edit sources.list for ubuntu or debian
if [ "${LINUXDISTRO}" == "ubuntu" ]
then
	echo "deb ${DISTROURL} ${RELEASE} main restricted multiverse universe
deb ${DISTROURL} ${RELEASE}-security main restricted multiverse universe
deb ${DISTROURL} ${RELEASE}-updates  main restricted multiverse universe
deb ${DISTROURL} ${RELEASE}-proposed  main restricted multiverse universe
# deb https://download.virtualbox.org/virtualbox/debian ${RELEASE} contrib
deb ${MYDEBIANURL} home main

#deb http://archive.ubuntu.com/ubuntu ${RELEASE} main restricted multiverse universe
#deb http://archive.ubuntu.com/ubuntu ${RELEASE}-security main restricted multiverse universe
#deb http://archive.ubuntu.com/ubuntu ${RELEASE}-updates  main restricted multiverse universe
#deb http://archive.ubuntu.com/ubuntu ${RELEASE}-proposed  main restricted multiverse universe" \
> /etc/apt/sources.list
else
	echo "deb ${DISTROURL} ${RELEASE} main contrib non-free
deb ${DISTROURL} ${RELEASE}-updates main contrib non-free
deb ${DISTROURL} ${RELEASE}-proposed-updates main contrib non-free
deb ${MYDEBIANURL} home main" \
> /etc/apt/sources.list
fi

# get the key for virtualbox
cd /root
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -

# make loop devices
# make the loop devices
for (( x = 0; x < 48; x += 1 ))
do
	if [ ! -b /dev/loop${x} ]
	then
    		mknod /dev/loop${x} b 7 ${x}
	fi
done
# set permissions of loop devices
chmod 666 /dev/loop*
chown root.root /dev/loop*

# add oracle java 7 repository
# add-apt-repository ppa:webupd8team/java

# install subversion

# get key and update repositories.
apt-key add ${MYDEBIANPATH}/publickeyFile.gpg
apt-get update
apt-get -y install subversion

# add all other config files so that no 'svn:externals' properties are necessary in the deb
# install files
cd /usr/local/bin
svn export ${SVNURL}/root/my-linux/scripts/unbindall
svn export ${SVNURL}/root/my-linux/scripts/bindall
svn export ${SVNURL}/root/my-linux/scripts/homehddBackup
svn export ${SVNURL}/root/my-linux/scripts/getkey

cd /etc
svn export ${SVNURL}/root/my-linux/config-files/rsyncd.conf
svn export ${SVNURL}/root/my-linux/config-files/fstab-extension

cd /etc/sudoers.d
svn export --force ${SVNURL}/root/my-linux/sudoers.d/robert
# set ownership
chown root.root robert
chmod 0440 robert

cd /etc/samba
svn export ${SVNURL}/root/my-linux/config-files/smb-extension.conf

# set up apt.conf
cd /etc/apt
svn export ${SVNURL}/root/my-linux/config-files/apt.conf


# setup fstab if it has not been setup already.
grep -q "fstab-extension" /etc/fstab
if [ $? -ne 0 ]
then
	# first backup it up
	cp -a /etc/fstab /etc/fstab.bak

	# append fstab extension to fstab
	cat /etc/fstab-extension >> /etc/fstab
fi
rm /etc/fstab-extension

# edit fstab so that winext is not mounted automatically
sed -i -e 's/defaults,umask=007,gid=46/noauto,umask=007,users,uid=robert,gid=robert/' /etc/fstab


# extract myrc.local and myenvironment from subversion
cd /usr/local/bin
svn export ${SVNURL}/root/my-linux/scripts/myrc.local
svn export ${SVNURL}/root/my-linux/scripts/myenvironment


# edit profile 
grep -q "myenvironment" /etc/profile
if [ $? -ne 0 ]
then
	echo ". /usr/local/bin/myenvironment" >> /etc/profile
fi

# add links to myrc.local
cd /etc/init.d
# force removal incase it exists
rm -f /etc/init.d/myrc.local
rm -f /etc/rc2.d/S500myrc.local

# make the links now.
if [ ! -L /etc/rc2.d/S500myrc.local ]
then
	if [ -f /usr/local/bin/myrc.local ]
	then
		# put links for myrc.local in init.d and rc2.d
		ln -s /usr/local/bin/myrc.local /etc/init.d/myrc.local
		ln -s /usr/local/bin/myrc.local /etc/rc2.d/S500myrc.local
		# register for start stop operation
		update-rc.d myrc.local defaults 99
	fi
fi

# edit .bashrc so directories will be in colour for root
cd
cp -f .bashrc .bashrc.bak
sed -i -e 's/#force_color_prompt/force_color_prompt/' .bashrc

# edit .bashrc for robert so directories will be in colour
cd /home/robert
sed -i -e 's/#force_color_prompt/force_color_prompt/' .bashrc

# set up dircolors
cd /root
dircolors --print-database > .dircolors
sed -i -e 's/^DIR 01;34/DIR 01;36/' .dircolors
sed -i -e 's/^LINK 01;36/LINK 01;33/' .dircolors
cp /root/.dircolors /home/robert/
cd /home/robert
chown robert.robert /home/robert/.dircolors

chown robert.robert .bashrc

# set time to local
timedatectl set-timezone Africa/Johannesburg
timedatectl set-local-rtc 1


# fix default grub
# edit 05_debian_theme
sed -i -e 's/white\/black/white\/blue/' /etc/grub.d/05_debian_theme

sed -i -e '/GRUB_CMDLINE_LINUX_DEFAULT/ c\GRUB_CMDLINE_LINUX_DEFAULT="acpi=force apm=power_off"
/GRUB_HIDDEN_TIMEOUT=0/ c\# GRUB_HIDDEN_TIMEOUT=0
/GRUB_HIDDEN_TIMEOUT_QUIET=true/ c\# GRUB_HIDDEN_TIMEOUT_QUIET=true' /etc/default/grub
if test $? -eq 0; then
	update-grub
else
	echo "error editing /etc/default/grub"
fi
# set link so boot only goes to command line
systemctl set-default multi-user.target

# set up repositories for oracle java8

#add-apt-repository ppa:webupd8team/java
#apt-get update
#apt-get install oracle-java8-installer

#update-java-alternatives -s java-8-oracle
#apt-get install oracle-java8-set-default

