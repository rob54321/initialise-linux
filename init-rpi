#!/bin/bash

# Script to initialise raspberry pi
# this script is run automatically after init-rpi-first is run
# which will boot the pi and then run this script automatically.
# multi-user.target is set so that user pi can be changed to robert
# the clock and time zone are also set prior to this script
#
# the subversion repository must exist.
# this script initialises the repositories for apt-get, makes all the devices, sets links for myenvironment, myrc.local and
# and installs subversion

# function to check the existence of svn or deb.debian.org or archive.raspberrypi.org or debhome
# this function will mount the correct disk drive
# if they are on a  disk drive LABEL.
# the function will exit the script if nothing is found
# parameters passed: disk_label, root directory of svn | deb.debian.org | archive.debian.org | debhome

mountresource () {
	# check if the disk label is attached
	blkid -L "$1"
	if test "$?" -ne 0; then
		echo "$1 is not attached"
		exit 1;
	fi
	# make the mount directory if it does not exist
	if test ! -d "/mnt/$1"; then
		mkdir "/mnt/$1"
		chown robert.robert "/mnt/$1"
	fi

	#  if disk not mounted, mount it
	findmnt "/mnt/$1"
	if test "$?" -ne 0; then
		# mount it
		mount -L "$1" "/mnt/$1"
		if test $? -ne 0; then
			# count not mount disk drive
			echo "could not mount $1"
			exit 1;
		fi
	fi
	# check if svn | deb.debian.org | archive.debian.org | debhome is accessible
	if test ! -d "/mnt/$1/$2"; then
		# svn or archive does not exist
		echo "/mnt/$1/$2 not found"
		echo "unmounting /mnt/$1"
		umount "/mnt/$1"
		exit 1;
	fi
	# return success
	return 0;
}
# function to edit /etc/apt/sources.list and /etc/apt/sources.list.d/raspi.list
# this function is only called if the -a option is given
# only called if the debian archives are on local disks.
# on the command line
# paraters passed: label of disk with deb.debian.org
#                  label of disk with archive.debian.org
editsources() {
	# set the URL and links for deb.debian.org and archive.debian.org
	DEBORGURL="file://${DEBORGLINK}"
	ARCHIVERPIURL="file://${ARCHIVERPILINK}"
	# remove the links if they exist
	rm -f "${DEBORGLINK}"
	rm -f "${ARCHIVERPILINK}"
	sudo -u robert ln -s "/mnt/$1/deb.debian.org" "${DEBORGLINK}"
	sudo -u robert ln -s "/mnt/$2/archive.raspberrypi.org" "${ARCHIVERPILINK}"

	# do not edit /etc/apt/sources.list if it has been edited
	grep -q "${DEBORGURL}" /etc/apt/sources.list
	if test $? -ne 0; then

		# edit /etc/apt/sources.list
		# comment all deb lines out
		sed -i -e 's/^deb /# deb /g' /etc/apt/sources.list

		# append the lines
		sed -i -e '$a \deb [ arch=arm64 ] '${DEBORGURL}' buster main contrib non-free\
deb [ arch=arm64 ] '${DEBORGURL}' buster-updates main contrib non-free\
deb [ arch=arm64 ] '${DEBORGURL}' buster-proposed-updates main contrib non-free\
deb [ arch=arm64 ] '${DEBORGURL}' buster-backports main contrib non-free' /etc/apt/sources.list
	fi

	# edit /etc/apt/sources.list.d/raspi.list
	# if it has not been edited.
	grep -q "${ARCHIVERPIURL}" /etc/apt/sources.list.d/raspi.list
	if test $? -ne 0; then
		# edit /etc/apt/sources.list.d/raspi.list
		sed -i -e 's/^deb /# deb /g' /etc/apt/sources.list.d/raspi.list

		# append line
		sed -i -e '$a \deb [ arch=arm64 ] '${ARCHIVERPIURL}' buster main' /etc/apt/sources.list.d/raspi.list
	fi
}

# defaults, links
# /mnt/debhome    -> /mnt/DEBHOMELABEL/debhome
# /mnt/deborg     -> /mnt/DEBORGLABEL/deb.debian.org
# /mnt/archiverpi -> /mnt/ARCHIVERPILABEL/archive.raspberrypi.org
# /mnt/svn        -> /mnt/SVNLABEL/svn
# the links cannot be changed, the mountpoints can be changed
# DEBORGLABEL, DEBHOMELABEL, ARCHIVERPILABEL, SVNLABEL
# are the labels of the disks containing deb.debian.org, archive.debian.org, debhome, svn and
# are all mounted at /mnt/LABEL

# only for raspberry pi
DEBORGLABEL="hd3"
DEBORGLINK="/mnt/deborg"
DEBHOMELABEL="ad64"
DEBHOMELINK="/mnt/debhome"
ARCHIVERPILABEL="hd3"
ARCHIVERPILINK="/mnt/archiverpi"
SVNLABEL="ad64"
SVNLINK="/mnt/svn"
SVNDESTINATION=""
RELEASE="none"
EDITSOURCES=1

while getopts S:a:ed:m:s:r:h opt
do
	case ${opt} in
		m) DEBHOMELABEL="${OPTARG}";;
		d) DEBORGLABEL="${OPTARG}";;
		a) ARCHIVERPILABEL="${OPTARG}";;
		s) SVNLABEL="${OPTARG}";;
		S) SVNDESTINATION="${OPTARG}";;
		e) EDITSOURCES=0;;
		r) RELEASE="${OPTARG}";;
		h) usage;;
		\?) usage;;
	esac
done



# disable the service that started this script
systemctl disable init-rpi.service
rm -v /etc/systemd/system/init-rpi.service

# change user pi to robert with correct groups and permissions
# check if user robert exists
groups robert > /dev/null 2>&1
if test $? -ne 0; then
	# user robert does not exist, create it
	usermod -l robert -m -d /home/robert pi

	# if group pi exists, change it to group robert
	getent group pi
	if test $? -eq 0; then
		# change the group pi to robert
		groupmod -n robert pi
	fi
fi

# make all the mount directories
chown robert.robert /mnt
dirlist="hd2 hd3 ad64 ssd axiz axiz2 king sah trans ver ver8 chaos ad scd1 scd2"
for dir in $dirlist
do
	if [ ! -d /mnt/${dir} ]
	then
		mkdir /mnt/${dir}
	fi
done

# change ownership of directories
chown robert.robert /mnt/*

#########################################################
# subversion
#########################################################
# svn is always accessed at file:///mnt/svn
SVNURL="file://${SVNLINK}"
# remove any old links
rm -f "${SVNLINK}"

# mount disk label for svn
# mountresource will exit if svn is not available
mountresource "${SVNLABEL}" "svn"

# svn disk mounted and it exists
# copy svn to destination if destination given
# do not copy svn to itself
if test "${SVNDESTINATION}" != ""; then
	# check if destination exists
	if test ! -d "${SVNDESTINATION}"; then
		mkdir -p "${SVNDESTINATION}"
		chown robert.robert "${SVNDESTINATION}"
	fi
	cp -a "/mnt/${SVNLABEL}/svn" "${SVNDESTINATION}/"
	# setup the link, svn was moved
	sudo -u robert ln -s "${SVNDESTINATION}/svn" "${SVNLINK}"
else
	# svn destination not changed, set the link
	sudo -u robert ln -s "/mnt/${SVNLABEL}/svn" "${SVNLINK}"
fi

########################################################
# debhome
########################################################
# make the link for debhome
# debhome is always at /mnt/debhome
rm -f "${DEBHOMELINK}"
DEBHOMEURL="file://${DEBHOMELINK}"

# mount disk label for debhome
# mountresource will exist if debhome is not available
mountresource "${DEBHOMELABEL}" "debhome"
sudo -u robert ln -s "/mnt/${DEBHOMELABEL}/debhome" "${DEBHOMELINK}"

########################################################
# sources.list
########################################################
# backup /etc/apt/sources.list if it is not backed up
if test ! -f /etc/apt/sources.list.bak; then
	cp /etc/apt/sources.list /etc/apt/sources.list.bak
fi

if test ! -f /etc/apt/sources.list.d/raspi.list.bak; then
	cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak
fi

# append debhome to /etc/apt/sources.list
# check if /etc/apt/sources.list has already been edited
grep "${DEBHOMEURL}" /etc/apt/sources.list
if test $? -ne 0; then
	# edit /etc/apt/sources.list for ubuntu or debian
	echo "deb ${DEBHOMEURL} home main" >> /etc/apt/sources.list
fi

# add key for repository
apt-key add "${DEBHOMELINK}/publickeyFile.gpg"

# if -a option given, edit /etc/apt/sources.list. EDITSOURCES set to 0 if -a given
# to use /mnt/hd3/deb.debian.org and /mnt/hd3/archive.raspberrypi.org
# then mount the disks for deb.debian.org and archive.raspberrypi.org
if test ${EDITSOURCES} -eq 0; then
	mountresource "${DEBORGLABEL}" "deb.debian.org"
	mountresource "${ARCHIVERPILABEL}" "archive.raspberrypi.org"
	# edit  /etc/apt/sources.list
	editsources "${DEBORGLABEL}" "${ARCHIVERPILABEL}"
fi

apt update

apt -y install subversion

# add all other config files so that no 'svn:externals' properties are necessary in the deb
# install files
svn export --force ${SVNURL}/root/my-linux/sudoers.d/robert /etc/sudoers.d
# set ownership
chown root.root /etc/sudoers.d/robert
chmod 0440 /etc/sudoers.d/robert

# setup fstab if it has not been setup already.
svn export --force ${SVNURL}/root/my-linux/config-files/fstab-extension /etc

# check if fstab-extention has been added to /etc/fstab
grep -q "fstab-extension" /etc/fstab
if [ $? -ne 0 ]
then
	# first backup it up
	cp -a /etc/fstab /etc/fstab.bak

	# append fstab extension to fstab
	cat /etc/fstab-extension >> /etc/fstab
fi
rm /etc/fstab-extension

#############################
# setup /root account
#############################
# root .bashrc edit so directories will be in colour for root and red prompt
cp -f /root/.bashrc /root/.bashrc.bak
# make the prompt
sed -i -e '/^# PS1/i \PS1='\''\${debian_chroot:+(\$debian_chroot)}\\[\\033[01;31m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;36m\\]\\w \#\\[\\033[00m\\] '\''' /root/.bashrc
# setup the aliases for colour
sed -i -e 's/^# alias l/alias l/' /root/.bashrc

# setup to use .dircolors
sed -i -e 's/^# export LS/export LS/' /root/.bashrc
sed -i -e 's/^# eval \"`dircolors`\"/eval \"\$(dircolors -b ~\/.dircolors)\"/' /root/.bashrc

# set up dircolors for root
dircolors --print-database > /root/.dircolors
sed -i -e 's/^DIR 01;34/DIR 01;36/' /root/.dircolors
sed -i -e 's/^LINK 01;36/LINK 01;33/' /root/.dircolors

#########################
# setup  /home/robert account
#########################
# copy .dircolors to /home/robert and set ownership
cp /root/.dircolors /home/robert/
chown robert.robert /home/robert/.dircolors

# edit .bashrc for pi so directories will be in colour
sudo -u robert cp /home/robert/.bashrc /home/robert/.bashrc.bak
# change colour of prompt
sudo -u robert sed -i -e 's/#force_color_prompt/force_color_prompt/' /home/robert/.bashrc
sudo -u robert sed -i -e 's/\[\\033\[01;34m\\\]/\[\\033\[01;36m\\\]/' /home/robert/.bashrc

# install git credentials
sudo -u robert svn export --force ${SVNURL}/root/my-linux/git/.gitconfig /home/robert/
sudo -u robert svn export --force ${SVNURL}/root/my-linux/git/.git-credentials /home/robert/

# export .bash_aliases from subversion
sudo -u robert svn export --force ${SVNURL}/root/my-linux/config-files/bash_aliases/.bash_aliases /home/robert


# edit subversion config so .git and .gitignore are ignored
sed -i -e 's/^# global-ignores =/global-ignores = .git .gitignore/' /etc/subversion/config

# edit nanorc
sed -i -e 's/^# set autoindent/set autoindent/' \
       -e 's/^# set linenumbers/set linenumbers/' \
       -e 's/^# set multibuffer/set multibuffer/' \
       -e 's/^# set positionlog/set positionlog/' \
       -e 's/^# set selectedcolor brightwhite,magenta/set selectedcolor brightwhite,magenta/' \
       -e 's/^# set numbercolor cyan/set numbercolor cyan/' \
       -e 's/^# set keycolor cyan/set keycolor cyan/' /etc/nanorc


# setup console
setupcon
