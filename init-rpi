#!/bin/bash

# Script to initialise raspberry pi
# this script is run by init-rpi-first or init-rpi.service
# depending on if the original user was pi or robert
# the raspberry pi will have booted into multi.user mode
# ie console mode, not into x windows.
# subversion was installed by init-rpi-first

# multi-user.target is set so that user pi can be changed to robert
# the clock and time zone are also set prior to this script
#
# the subversion repository must exist.
# this script initialises the repositories for apt-get, makes all directories, sets links svn and debhome
# user robert exists only at this stage hence directories persmisions can only be set here

###############################################################
# this function prints an error mesage and exists.
# parameters passed , error message
###############################################################
exitonerror() {
	echo "$1" | tee -a ${LOGFILE}
	exit 1
}

# change user pi to robert with correct groups and permissions
# check if user robert exists
# parameters: changeuser OLDUSER NEWUSER
# ie changeuser pi robert
changeuser() {
	groups $2 > /dev/null 2>&1
	if test $? -ne 0; then
		# user robert does not exist, create it
		usermod -l $2 -m -d /home/$2 $1

		# if group pi exists, change it to group robert
		getent group $1
		if test $? -eq 0; then
			# change the group pi to robert
			groupmod -n $2 $1
		fi
		echo "user robert does not exist" >> ${LOGFILE}
	else
		echo "user robert exists" >> ${LOGFILE}
	fi
}

# make all the mount directories
# set ownership to newuser
# parameters: makedirs ${NEWUSER}

makedirs() {
	chown $1.$1 /mnt
	dirlist="hd2 hd3 ad64 ssd axiz axiz2 king sah trans ver ver8 chaos ad scd1 scd2"
	for dir in $dirlist
	do
		if [ ! -d /mnt/${dir} ]
		then
			mkdir /mnt/${dir}
			test $? -eq 0 || exitonerror "could not make /mnt/${dir}"
		fi
	done

	# change ownership of directories
	chown --no-dereference $1.$1 /mnt/*
	echo "made directories" >> ${LOGFILE}
}

#############################################
# setup colors for accounts and nano
# parameters: accountcolours newuser
#############################################
accountcolours() {
	#############################
	# setup /root account
	#############################
	# root .bashrc edit so directories will be in colour for root and red prompt
	if test ! -f /root/.bashrc.bak; then
		cp -f /root/.bashrc /root/.bashrc.bak
	fi
	# make the prompt
	sed -i -e '/^# PS1/i \PS1='\''\${debian_chroot:+(\$debian_chroot)}\\[\\033[01;31m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;36m\\]\\w \#\\[\\033[00m\\] '\''' /root/.bashrc
	# setup the aliases for colour
	sed -i -e 's/^# alias l/alias l/' /root/.bashrc

	# setup to use .dircolors
	sed -i -e 's/^# export LS/export LS/' /root/.bashrc
	sed -i -e 's/^# eval \"`dircolors`\"/eval \"\$(dircolors -b ~\/.dircolors)\"/' /root/.bashrc

	# set up dircolors for root
	dircolors --print-database > /root/.dircolors
	sed -i -e 's/^DIR 01;34/DIR 01;36/' /root/.dircolors
	sed -i -e 's/^LINK 01;36/LINK 01;33/' /root/.dircolors

	#########################
	# setup  /home/robert account
	#########################
	# check user robert exists
	groups robert > /dev/null 2>&1
	test $? -eq 0 || exitonerror "user robert does not exist"

	# copy .dircolors to /home/robert and set ownership
	cp /root/.dircolors "/home/$1/"
	chown $1.$1 /home/$1/.dircolors

	# edit .bashrc for pi so directories will be in colour
	if test ! -f /home/$1/.bashrc.bak; then
		sudo -u $1 cp /home/$1/.bashrc /home/$1/.bashrc.bak
	fi
	# change colour of prompt
	sudo -u robert sed -i -e 's/#force_color_prompt/force_color_prompt/' /home/$1/.bashrc
	sudo -u $1 sed -i -e 's/\[\\033\[01;34m\\\]/\[\\033\[01;36m\\\]/' /home/$1/.bashrc

	# install git credentials
	sudo -u $1 svn export --force ${SVNURL}/root/my-linux/git/.gitconfig /home/$1/
	sudo -u $1 svn export --force ${SVNURL}/root/my-linux/git/.git-credentials /home/$1/

	# export .bash_aliases from subversion
	sudo -u $1 svn export --force ${SVNURL}/root/my-linux/config-files/bash_aliases/.bash_aliases /home/$1


	# edit subversion config so .git and .gitignore are ignored
	sed -i -e 's/^# global-ignores =/global-ignores = .git .gitignore/' /etc/subversion/config

	# edit nanorc
	sed -i -e 's/^# set autoindent/set autoindent/' \
	       -e 's/^# set linenumbers/set linenumbers/' \
	       -e 's/^# set smooth/set smooth/' \
	       -e 's/^# set multibuffer/set multibuffer/' \
	       -e 's/^# set positionlog/set positionlog/' \
	       -e 's/^# set selectedcolor lightwhite,magenta/set selectedcolor lightwhite,magenta/' \
	       -e 's/^# set numbercolor cyan/set numbercolor cyan/' \
	       -e 's/^# set keycolor cyan/set keycolor cyan/' /etc/nanorc
	echo "setup account colours" >> ${LOGFILE}
}

# only for raspberry pi
OLDUSER="pi"
NEWUSER="robert"
LOGFILE="/tmp/init-rpi.log"

################################
# main entry
################################
echo "init-rpi is running" > ${LOGFILE}

# install subverion if it is not installed
dpkg-query -W subversion > /dev/null 2>&1
test $? -eq 0 || exitonerror "subversion is not installed"

# check if any process of pi is running
ps -U "${OLDUSER}" > /dev/null 2>&1
test $? -eq 0 && exitonerror "a process from pi is running"

# disable the service that started this script
systemctl is-enabled init-rpi.service
if test $? -eq 0; then
	systemctl disable init-rpi.service
	echo "disabled init-rpi.service" >> ${LOGFILE}
fi

# change user from pi to robert
changeuser "${OLDUSER}" "${NEWUSER}"

# make all mount directories
# must be done before setupsvn()
makedirs "${NEWUSER}"

# setup up account colours
accountcolours "${NEWUSER}"

# setup console
setupcon
