#! /bin/sh

# this script should be run immediately after the rpi has
# maximised the sdcard space, ie after the first boot.
# it sets up rpi to boot to console and then runs init-rpi
# through systemd service. init-rpi only runs once and does
# the rest of the setup.

# this is done so user pi is not active
# and usermod and groupmod can be run.

usage() {
	echo "-d debian path [file:///mnt/hdd/debian|http://..]	default: ${RPIURL}";
	echo "-m debhome path						default: ${MYDEBIANPATH}";
	echo "-r release name [buster]				default: ${RELEASE}";
	echo "-s svn destination path					default: ${SVNPATH}";
	echo "-l linklabel for hdd					default: ${LINKLABEL}";
	echo "-h help"
	exit 0
}

# defaults
# only for raspberry pi
RPIURL="http://deb.debian.org/debian"
SVNPATH="/home/pi"
MYDEBIANPATH="/mnt/hdd/debhome"
LINKLABEL="ad64"
RELEASE="none"

while getopts d:m:s:l:r:h opt
do
	case ${opt} in
		d) RPIURL="${OPTARG}";;
		m) MYDEBIANPATH="${OPTARG}";;
		s) SVNPATH="${OPTARG}";;
		l) LINKLABEL="${OPTARG}";;
		r) RELEASE="${OPTARG}";;
		h) usage;;
		\?) usage;;
	esac
done
# set up the urls and path for debian or ubuntu

if test "${RELEASE}" = "none"; then
	echo "Choose a release: stretch|buster etc"
	exit 1
fi

# set the link for hdd
LINK="/mnt/${LINKLABEL}"
MYDEBIANURL="file://${MYDEBIANPATH}"

# make all the mount directories
chown pi.pi /mnt
cd /mnt
dirlist="hd2 hd3 ad64 ssd axiz axiz2 king sah trans ver ver8 chaos ad scd1 scd2"
for dir in $dirlist
do
	if [ ! -d /mnt/${dir} ]
	then
		mkdir /mnt/${dir}
	fi
done

# set the link for where svn and debhome are
LINK="/mnt/${LINKLABEL}"

# check /mnt/${LINKLABEL} exists
if test ! -d "${LINK}"; then
	mkdir "${LINK}"
fi

# set permisions of /mnt dirs
chown pi.pi /mnt/*

# make the link for subversion
# so it can be accessed as file:///mnt/svn no matter where it is located
cd /mnt

if test -L svn; then
	rm -f svn
fi
sudo -u pi ln -s "${SVNPATH}/svn" svn
SVNURL="file://${SVNPATH}/svn"


# make the hdd link
if test -L hdd; then
	rm -f hdd
fi
sudo -u pi ln -s ${LINK} hdd

# mount the  flash drive for debhome if it is not mounted
findmnt ${LINK}
if test $? -ne 0; then
	mount -L ${LINKLABEL} ${LINK}
fi

# copy svn from ad64 to destination path
cp -a ${LINK}/svn ${SVNPATH}

# check the svn repository
if test ! -e "${SVNPATH}/svn"; then
	echo "${SVNPATH}/svn does not exist"
	exit 1
fi

#check for debhome
if [ ! -e ${MYDEBIANPATH} ]
then
	echo "No debhome repository found at ${MYDEBIANPATH}"
	exit 1
fi

# script to initialise sources.list, apt conf and
# setup everything to be able to mount the repository

# make sources.list for amd64
# check if sources.list has already been edited
grep "${MYDEBIANURL}" /etc/apt/sources.list
if test $? -ne 0; then
	cp /etc/apt/sources.list /etc/apt/sources.list.bak

	# edit sources.list for ubuntu or debian
	echo "deb ${MYDEBIANURL} home main" >> /etc/apt/sources.list
fi

# add key for repository
apt-key add ${MYDEBIANPATH}/publickeyFile.gpg
apt update

apt -y install subversion

# add all other config files so that no 'svn:externals' properties are necessary in the deb
# install files
cd /etc/sudoers.d
svn export --force ${SVNURL}/root/my-linux/sudoers.d/robert
# set ownership
chown root.root robert
chmod 0440 robert

# setup fstab if it has not been setup already.
cd /etc
svn export --force ${SVNURL}/root/my-linux/config-files/fstab-extension /etc

# check if fstab-extention has been added to /etc/fstab
grep -q "fstab-extension" /etc/fstab
if [ $? -ne 0 ]
then
	# first backup it up
	cp -a /etc/fstab /etc/fstab.bak

	# append fstab extension to fstab
	cat /etc/fstab-extension >> /etc/fstab
fi
rm /etc/fstab-extension

# root .bashrc edit so directories will be in colour for root and red prompt
cd /root
cp -f .bashrc .bashrc.bak
# make the prompt
sed -i -e '/^# PS1/i \PS1='\''\${debian_chroot:+(\$debian_chroot)}\\[\\033[01;31m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;36m\\]\\w \#\\[\\033[00m\\] '\''' ~/.bashrc
# setup the aliases for colour
sed -i -e 's/^# alias l/alias l/' ~/.bashrc

# setup to use .dircolors
sed -i -e 's/^# export LS/export LS/' ~/.bashrc
sed -i -e 's/^# eval \"`dircolors`\"/eval \"\$(dircolors -b ~\/.dircolors)\"/' ~/.bashrc

# set up dircolors for root
dircolors --print-database > .dircolors
sed -i -e 's/^DIR 01;34/DIR 01;36/' .dircolors
sed -i -e 's/^LINK 01;36/LINK 01;33/' .dircolors

# copy .dircolors to /home/pi and set ownership
cp /root/.dircolors /home/pi/
cd /home/pi
chown pi.pi /home/pi/.dircolors

# edit .bashrc for pi so directories will be in colour
cd /home/pi
cp .bashrc .bashrc.bak
sed -i -e 's/#force_color_prompt/force_color_prompt/' .bashrc
sed -i -e 's/\[\\033\[01;34m\\\]/\[\\033\[01;36m\\\]/' .bashrc

# change colour of prompt


chown pi.pi .bashrc

# export .bash_aliases from subversion
svn export --force ${SVNURL}/root/my-linux/config-files/bash_aliases/.bash_aliases /home/pi
chown pi.pi .bash_aliases


# set the rpi to boot to console and no autologin
systemctl set-default multi-user.target
ln -fs /lib/systemd/system/getty@.service /etc/systemd/system/getty.target.wants/getty@tty1.service
if test -e /etc/systemd/system/getty@tty1.service.d/autologin.conf; then
	rm /etc/systemd/system/getty@tty1.service.d/autologin.conf
fi

# set the time and zone
timedatectl set-timezone Africa/Johannesburg

# set hostname
hostnamectl set-hostname rpi
# change it in /etc/hosts
sed -i -e 's/raspberrypi/rpi/' /etc/hosts

# save init-rpi init-rpi-first and reset-rpi in /usr/local/bin
cd /usr/local/bin
svn export --force ${SVNURL}/root/my-linux/rpi/init-rpi .
svn export --force ${SVNURL}/root/my-linux/rpi/init-rpi-first .
svn export --force ${SVNURL}/root/my-linux/rpi/reset-rpi .

# setup default console with Terminus
cd /etc/default
sed -i -e 's/FONTFACE=\".*\"/FONTFACE="Terminus"/' \
       -e 's/FONTSIZE=\".*\"/FONTSIZE="16X32"/' /etc/default/console-setup

# setup keyboard
sed -i -e 's/XKBLAYOUT=\".*\"/XKBLAYOUT="za"/' /etc/default/keyboard
setupcon

# remove splash screen and make boot verbose
sed -i -e 's/quiet splash plymouth.ignore-serial-consoles//' /boot/cmdline.txt

# disable overscan to remove border in x windows
sed -i -e 's/^#disable_overscan/disable_overscan/' /boot/config.txt

# edit subversion config so .git and .gitignore are ignored
sed -i -e 's/^# global-ignores =/global-ignores = .git .gitignore/' /etc/subversion/config

# edit nanorc
sed -i -e 's/^# set autoindent/set autoindent/' \
       -e 's/^# set linenumbers/set linenumbers/' \
       -e 's/^# set multibuffer/set multibuffer/' \
       -e 's/^# set positionlog/set positionlog/' \
       -e 's/^# set selectedcolor/set selectedcolor/' \
       -e 's/^# set numbercolor/set numbercolor/' \
       -e 's/^# set keycolor/set keycolor/' /etc/nanorc

# install git credentials
svn export --force ${SVNURL}/root/my-linux/rpi/.gitconfig /home/pi/
svn export --force ${SVNURL}/root/my-linux/rpi/.git-credentials /home/pi/

# if the svn path was set to /home/pi
# it must be changed to /home/robert as the user pi is changed to robert
if test "${SVNPATH}" = "/home/pi"; then
	SVNPATH="/home/robert"
fi

# launch service init-rpi
# create the init-rpi service
echo "[Unit]
Description=Reboot raspberry pi and then initialise rpi once.

[Service]
Type=simple
ExecStart=/bin/bash /usr/local/bin/init-rpi ${SVNPATH}

[Install]
WantedBy=multi-user.target" > /etc/systemd/system/init-rpi.service

# set mode for init-rpi.service
chmod 0644 /etc/systemd/system/init-rpi.service

# enable the service for the next boot
systemctl enable init-rpi

# reboot
shutdown -r now
